{"version":3,"sources":["Home.js","Counter.js","Timer.js","NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","Counter","useState","count","setCount","Box","ButtonGroup","color","aria-label","Button","onClick","Timer","id","second","setSecond","runningFlag","setRunningFlag","stopFlag","setStopFlag","refSecond","useRef","refRunningFlag","refStopFlag","useEffect","current","console","log","setInterval","clearInterval","useStyles","makeStyles","theme","root","display","flexGrow","popover","pointerEvents","paper","padding","spacing","NavigationBar","classes","React","anchorElHome","setAnchorElHome","anchorElCounter","setAnchorElCounter","anchorElTimer","setAnchorElTimer","handlePopoverHomeClose","handlePopoverCounterClose","handlePopoverTimerClose","openHome","Boolean","openCounter","openTimer","PopOverHome","Popover","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","Typography","PopOverCounter","PopOverTimer","AppBar","position","style","background","lightBlue","Toolbar","margin","to","onMouseEnter","event","currentTarget","onMouseLeave","exact","path","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25282ea6.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\n\nfunction Home(props) {\n  return (\n    <div className=\"Home\">\n      <body>\n        <div>\n          <p>\n            Welcome.\n          </p>\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { Button,ButtonGroup } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nimport './App.css';\n\nfunction Counter(props) {\n  const [count,setCount] = useState(0);\n  const plusCount = () =>{\n    setCount(count+1)\n  }\n  const minusCount = () =>{\n    setCount(count-1)\n  }\n  const resetCount = () =>{\n    setCount(0)\n  }\n  return (\n    <Box className=\"Counter\">\n      <body>\n        <p>The count is {count}.</p>\n        <Box className=\"Buttons\">\n          <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n            <Button onClick={()=>{ minusCount()} }>-</Button>\n            <Button onClick={()=>{ resetCount()} }>RESET</Button>\n            <Button onClick={()=>{ plusCount()} }>+</Button>\n          </ButtonGroup>\n        </Box>\n      </body>\n    </Box>\n  );\n}\n\nexport default Counter;","import React, { useEffect, useRef, useState } from 'react';\nimport { Button,ButtonGroup } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nimport './App.css';\n\nfunction Timer(props) {\n  const [second,setSecond] = useState(0);\n  const [runningFlag,setRunningFlag] = useState(false);\n  const [stopFlag,setStopFlag] = useState(true);\n  const refSecond = useRef(second);\n  const refRunningFlag = useRef(runningFlag)\n  const refStopFlag = useRef(stopFlag);\n  useEffect( ()=>{\n    refSecond.current = second;\n    refRunningFlag.current = runningFlag;\n    refStopFlag.current = stopFlag;\n  },[second,runningFlag,stopFlag]);\n\n  var id,demon;\n  useEffect( ()=>{\n    console.log(\"called\")\n    demon = setInterval( ()=>{\n      if(!refStopFlag.current && !refRunningFlag.current){\n        id = setInterval( ()=>{\n          if(refStopFlag.current===true){\n            clearInterval(id);\n          }else{\n            setSecond(refSecond.current+1)\n          }\n        } ,1000);\n        setRunningFlag(true)\n      }\n    },1000)\n  },[])\n\n  let startTimer = ()=>{\n    setStopFlag(false)\n  }\n  const stopTimer = () =>{\n    setRunningFlag(false)\n    setStopFlag(true)\n  }\n  const resetTimer = () =>{\n    setSecond(0);\n  }\n\n  return (\n    <Box className=\"Timer\">\n      <body>\n        <p>{second} seconds have passed.</p>\n        <Box className=\"Buttons\">\n          <ButtonGroup color=\"primary\">\n            {stopFlag?\n              (<Button onClick={()=>{startTimer()}}>Start</Button>) :\n              (<Button onClick={()=>{stopTimer()}}>Stop</Button>)\n            }\n            \n            <Button onClick={()=>{resetTimer()}}>Reset</Button>\n            \n          </ButtonGroup>\n        </Box>\n      </body>\n    </Box>\n  );\n}\n\nexport default Timer;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport { Link as RouterLink, Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport { lightBlue } from '@material-ui/core/colors';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexGrow: 1,\r\n  },\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorElHome, setAnchorElHome] = React.useState(null);\r\n  const [anchorElCounter, setAnchorElCounter] = React.useState(null);\r\n  const [anchorElTimer, setAnchorElTimer] = React.useState(null);\r\n  const handlePopoverHomeOpen = (event) => {\r\n    setAnchorElHome(event.currentTarget);\r\n  };\r\n  const handlePopoverHomeClose = () => {\r\n    setAnchorElHome(null);\r\n  };\r\n  const handlePopoverCounterOpen = (event) => {\r\n    setAnchorElCounter(event.currentTarget);\r\n  };\r\n  const handlePopoverCounterClose = () => {\r\n    setAnchorElCounter(null);\r\n  };\r\n  const handlePopoverTimerOpen = (event) => {\r\n    setAnchorElTimer(event.currentTarget);\r\n  };\r\n  const handlePopoverTimerClose = () => {\r\n    setAnchorElTimer(null);\r\n  };\r\n\r\n  const openHome = Boolean(anchorElHome);\r\n  const openCounter = Boolean(anchorElCounter);\r\n  const openTimer = Boolean(anchorElTimer);\r\n\r\n  const PopOverHome = ()=>{\r\n      return (\r\n        <Popover\r\n            id=\"mouse-over-popover-home\"\r\n            className={classes.popover}\r\n            classes={{\r\n            paper: classes.paper,\r\n            }}\r\n            open={openHome}\r\n            anchorEl={anchorElHome}\r\n            anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n            }}\r\n            onClose={handlePopoverHomeClose}\r\n            disableRestoreFocus\r\n        >\r\n            <Typography>Home</Typography>\r\n        </Popover>\r\n      )\r\n  }\r\n\r\n  const PopOverCounter = ()=>{\r\n    return (\r\n      <Popover\r\n          id=\"mouse-over-popover-counter\"\r\n          className={classes.popover}\r\n          classes={{\r\n          paper: classes.paper,\r\n          }}\r\n          open={openCounter}\r\n          anchorEl={anchorElCounter}\r\n          anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n          }}\r\n          onClose={handlePopoverCounterClose}\r\n          disableRestoreFocus\r\n      >\r\n          <Typography>Counter</Typography>\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  const PopOverTimer = ()=>{\r\n    return (\r\n      <Popover\r\n          id=\"mouse-over-popover-timer\"\r\n          className={classes.popover}\r\n          classes={{\r\n          paper: classes.paper,\r\n          }}\r\n          open={openTimer}\r\n          anchorEl={anchorElTimer}\r\n          anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n          }}\r\n          onClose={handlePopoverTimerClose}\r\n          disableRestoreFocus\r\n      >\r\n          <Typography>Timer</Typography>\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ background: lightBlue[50]}} >\r\n            <Toolbar>\r\n            <Box position=\"\" margin=\"auto\">\r\n                <RouterLink to=\"/\" \r\n                    onMouseEnter={handlePopoverHomeOpen}\r\n                    onMouseLeave={handlePopoverHomeClose}>\r\n                    <HomeIcon style={ {color: lightBlue[400],}}/>\r\n                </RouterLink>\r\n                <RouterLink to=\"/counter\"\r\n                    onMouseEnter={handlePopoverCounterOpen}\r\n                    onMouseLeave={handlePopoverCounterClose}>\r\n                    <PlusOneIcon style={{ color: lightBlue[400] }}/>\r\n                </RouterLink>\r\n                <RouterLink to=\"/timer\"\r\n                    onMouseEnter={handlePopoverTimerOpen}\r\n                    onMouseLeave={handlePopoverTimerClose}>\r\n                    <AlarmIcon style={{ color: lightBlue[400] }}/>\r\n                </RouterLink>\r\n                \r\n                <Route exact path=\"/\"><Typography style={{ color: lightBlue[400] }}>Home</Typography></Route>\r\n                <Route path=\"/counter\"><Typography style={{ color: lightBlue[400] }}>Counter</Typography></Route>\r\n                <Route path=\"/timer\"><Typography style={{ color: lightBlue[400] }}>Timer</Typography></Route>\r\n            </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <PopOverHome/>\r\n        <PopOverCounter/>\r\n        <PopOverTimer/>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Home from \"./Home\"\nimport Counter from \"./Counter\"\nimport Timer from \"./Timer\"\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport NavigationBar from './NavigationBar';\n\nfunction App() {\n  return (\n    \n    <Box className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <NavigationBar/>\n        </header>\n        <Route exact path=\"/\"><Home/></Route>\n        <Route exact path=\"/counter\"><Counter/></Route>\n        <Route exact path=\"/timer\"><Timer /></Route>\n      </Router>\n    </Box>\n    \n  );\n\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}